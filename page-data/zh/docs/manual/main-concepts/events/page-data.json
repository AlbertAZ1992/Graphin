{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-9-108-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/manual/main-concepts/events","result":{"data":{"site":{"siteMetadata":{"title":"Graphin","githubUrl":"https://github.com/antvis/graphin","docs":[{"slug":"manual","title":{"zh":"使用文档","en":"docs"},"order":0},{"slug":"manual/main-concepts","title":{"zh":"核心概念","en":"Main Concepts"},"order":3},{"slug":"manual/advanced-guides","title":{"zh":"进阶指导","en":"Advanced Guides"},"order":4},{"slug":"manual/readme","title":{"zh":"文档大纲","en":"readme"},"order":5}]},"pathPrefix":""},"markdownRemark":{"html":"<h2 id=\"事件的定义\"><a href=\"#%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%AE%9A%E4%B9%89\" aria-label=\"事件的定义 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件的定义</h2>\n<p>我们在图上的交互行为，其实都会触发事件，比如窗口缩放时，Graphin 会自动更新画布的宽高。又比如画布缩放时，默认只保留 KeyShape。</p>\n<p>我们可以通过 G6 的 API 来对事件进行监听。</p>\n<h2 id=\"支持的事件\"><a href=\"#%E6%94%AF%E6%8C%81%E7%9A%84%E4%BA%8B%E4%BB%B6\" aria-label=\"支持的事件 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>支持的事件</h2>\n<p>graph 监听的名称是由 <code class=\"language-text\">元素 : 事件</code> 的方式组合而成的，例如<code class=\"language-text\">node:click</code>则表示节点的点击事件。常见的事件如下</p>\n<table>\n<thead>\n<tr>\n<th>  元素</th>\n<th>事件</th>\n<th>组合的事件名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>node / edge / canvas</td>\n<td>click （点击事件）</td>\n<td><code class=\"language-text\">node:click</code>, <code class=\"language-text\">edge:click</code>, <code class=\"language-text\">canvas:click</code></td>\n</tr>\n<tr>\n<td>node / edge / canvas</td>\n<td>dblclick （双击事件）</td>\n<td><code class=\"language-text\">node:dblclick</code>,<code class=\"language-text\">edge:dblclick</code>,<code class=\"language-text\">canvas:dblclick</code></td>\n</tr>\n<tr>\n<td>node / edge / canvas</td>\n<td>contextmenu （右键菜单事件）</td>\n<td><code class=\"language-text\">node:contextmenu</code>,<code class=\"language-text\">edge:contextmenu</code>,<code class=\"language-text\">canvas:contextmenu</code></td>\n</tr>\n</tbody>\n</table>\n<p>更多事件，请参考 G6 的 <a href=\"https://www.yuque.com/antv/g6/event-api\" target=\"_self\" rel=\"nofollow\">Events API</a></p>\n<h2 id=\"事件的用法\"><a href=\"#%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%94%A8%E6%B3%95\" aria-label=\"事件的用法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件的用法</h2>\n<p>我们使用 graphRef 获得 G6 的 Graph 实例，在 Graph 上监听事件。比如下列代码，我们希望将点击的节点存储起来：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Graphin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Utils <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Toolbar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        selected<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> selected <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> graphRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> graph <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> graphRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleNodeClick</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                selected<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'model'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> handleNodeClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 如果是每次渲染，那就需要解绑事件</span>\n            graph<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> handleNodeClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">layout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'concentric'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>graphRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Graphin</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/zh/docs/manual/main-concepts/events/#%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%AE%9A%E4%B9%89\">事件的定义</a></li>\n<li><a href=\"/zh/docs/manual/main-concepts/events/#%E6%94%AF%E6%8C%81%E7%9A%84%E4%BA%8B%E4%BB%B6\">支持的事件</a></li>\n<li><a href=\"/zh/docs/manual/main-concepts/events/#%E4%BA%8B%E4%BB%B6%E7%9A%84%E7%94%A8%E6%B3%95\">事件的用法</a></li>\n</ul>","fields":{"slug":"/zh/docs/manual/main-concepts/events","readingTime":{"text":"1 min read","time":56100}},"frontmatter":{"title":"Events 事件响应"},"parent":{"relativePath":"manual/main-concepts/events.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"Graphin 简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend 扩展接口","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/graphin"},"frontmatter":{"title":"Graphin","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register 注册接口","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/graphin"},"frontmatter":{"title":"Graphin 组件","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout 自动布局","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin 实例接口","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components 分析组件","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options 配置","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events 事件响应","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/components"},"frontmatter":{"title":"分析组件","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/components"},"frontmatter":{"title":"Analysis component","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/icons"},"frontmatter":{"title":"内置图标","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/icons"},"frontmatter":{"title":"Default Icons","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/contributing"},"frontmatter":{"title":"Contribution Guide","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/Contributing"},"frontmatter":{"title":"贡献指南","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/change-log"},"frontmatter":{"title":"更新日志","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/change-log"},"frontmatter":{"title":"ChangeLog","order":9}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0},"html":"<h2 id=\"01-数据的定义\"><a href=\"#01-%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%9A%E4%B9%89\" aria-label=\"01 数据的定义 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 数据的定义</h2>\n<blockquote>\n<p>图的数据结构比较固定。一般用 nodes 表示节点的集合，用 edges 表示边的集合。</p>\n</blockquote>\n<ul>\n<li>\n<ol>\n<li>用 TypeScript 的类型来定义数据 data 如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** 节点 */</span>\n    nodes<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** 边 */</span>\n    edges<span class=\"token punctuation\">:</span> Edge<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<ol start=\"2\">\n<li>Node 最重要的三个概念</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>id 是节点的唯一标识，如果 id 不存在，Graphin 会忽略这个节点</td>\n</tr>\n<tr>\n<td>shape</td>\n<td>shape 是告诉 Graphin，渲染什么样的节点，默认设置为内置的 <code class=\"language-text\">CircleNode</code> 类型 。shape 和 G6 中的 shape 是同一个概念</td>\n</tr>\n<tr>\n<td>data</td>\n<td>data 保存了后端返回的节点数据。单独用 data 字段来存储是为了避免和 Graphin 的节点数据混在一起</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<ol start=\"3\">\n<li>Edge 最重要的三个概念</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>source</td>\n<td>source 是边连接的源节点的 id ，是 string 类型</td>\n</tr>\n<tr>\n<td>target</td>\n<td>target 是边连接的目标节点的 id ，是 string 类型</td>\n</tr>\n<tr>\n<td>data</td>\n<td>data 保存了后端返回的边数据，单独用 data 字段来存储是为了避免和 Graphin 的节点数据混在一起</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>完整的 API，请查看<a href=\"/zh/docs/api/graphin#data\">API 手册</a></p>\n</blockquote>\n<h2 id=\"02-从数据到视图\"><a href=\"#02-%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A7%86%E5%9B%BE\" aria-label=\"02 从数据到视图 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 从数据到视图</h2>\n<p>Graphin 数据全量渲染和增量添加：</p>\n<ul>\n<li>增量数据添加：Graphin 会根据前置布局，动态完成增量数据添加，达到节点扩散，关系发现等效果。</li>\n<li>全量数据渲染：Graphin 支持全量数据渲染，满足保存，导入，导出等需求。</li>\n</ul>\n<p>不管是何种方式，我们在使用 Graphin 的时候，只需要传入要渲染的 data 就可以。</p>\n<p>有时候我们需要根据业务场景，动态调整节点的颜色，大小等。在 Graphin 中，完成这个需求也很简单，只需要自定义一个 <code class=\"language-text\">transform</code> 函数。因为 Graphin 是数据驱动设计，改变数据即可以改变视图。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>对于默认的 <code class=\"language-text\">CircleNode</code> 节点，我们只需要改变每个节点 style 即可：</p>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nodeSize</td>\n<td>20</td>\n<td>节点的大小</td>\n</tr>\n<tr>\n<td>primaryColor</td>\n<td>'#9900EF'</td>\n<td>节点的主要颜色</td>\n</tr>\n<tr>\n<td>fontSize</td>\n<td>12</td>\n<td>文本的字体大小</td>\n</tr>\n<tr>\n<td>fontColor</td>\n<td>'#3b3b3b'</td>\n<td>文本的字体颜色</td>\n</tr>\n<tr>\n<td>dark</td>\n<td>'#eee'</td>\n<td>dark 置灰</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>无</td>\n<td>iconfont 的 name</td>\n</tr>\n<tr>\n<td>fontFamily</td>\n<td>'graphin'</td>\n<td>iconfont 的 fontFamily，默认为 Graphin 内置 icon</td>\n</tr>\n</tbody>\n</table>\n<p>Graphin 的内置 icon 请查阅<a href=\"/zh/docs/manual/icons\">内置图标</a></p>\n<blockquote>\n<p>这里的 style 属性规范只针对 Graphin 的内置 Shape。如果是自定义 Shape，从 style 到 G6 节点 attr 的映射可以在 Shape 定义时自行配置</p>\n</blockquote>\n<p>综上，我们可以编写 transform 函数来对 Data 进行转换：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">trasform</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> nodes<span class=\"token punctuation\">:</span> NodeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> edges<span class=\"token punctuation\">:</span> EdgeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nodes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nodes<span class=\"token punctuation\">:</span> NodeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                id<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                data<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 根据type来指定渲染的shape</span>\n                shape<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">===</span> <span class=\"token string\">'phone'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'MyCustomNode'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'CircleNode'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 根据数据的渲染样式</span>\n                style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    nodeSize<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token operator\">?</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">edges</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">edges<span class=\"token punctuation\">:</span> EdgeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> edges<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        nodes<span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">nodes</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        edges<span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">edges</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>transform<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"03-特殊情况\"><a href=\"#03-%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5\" aria-label=\"03 特殊情况 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 特殊情况</h2>\n<p>通过数据的定义，我们知道 Graphin 的 data 是必选项，我们把几种特殊的情况列举在下面：</p>\n<ul>\n<li>如何渲染一个空画布</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>数据 data 和布局 layout 组合起来是如何渲染的？</li>\n</ul>\n<p>渲染包含两个关键点</p>\n<ul>\n<li>\n<ol>\n<li>节点的形状：它由 shape 和 id 共同决定的</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>节点的位置：它由 Node 的 x 和 y 值决定的</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  x、y 坐标</th>\n<th>Layout 布局</th>\n<th>渲染结果</th>\n<th>使用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存在</td>\n<td>不存在</td>\n<td>根据 data.nodes 中的 x，y 进行布局渲染</td>\n<td>图保存再复现</td>\n</tr>\n<tr>\n<td>存在</td>\n<td>存在</td>\n<td>忽略 data.nodes 中的布局信息，根据 layout.name 进行布局渲染</td>\n<td>布局切换</td>\n</tr>\n<tr>\n<td>不存在</td>\n<td>不存在 / 存在</td>\n<td>根据 layout.name 进行布局渲染</td>\n<td>布局渲染</td>\n</tr>\n</tbody>\n</table>"}},"next":{"node":{"fields":{"slug":"/zh/docs/manual/Contributing"},"frontmatter":{"title":"贡献指南","order":8},"html":"<blockquote>\n<p>本指南参考自 <a href=\"https://ant.design/docs/react/contributing-cn\" target=\"_self\" rel=\"nofollow\">Ant Design</a></p>\n</blockquote>\n<p>这篇指南会指导你如何为 Graphin 贡献一份自己的力量，请在你要提 issue 或者 pull request 之前花几分钟来阅读一遍这篇指南。</p>\n<h2 id=\"行为准则\"><a href=\"#%E8%A1%8C%E4%B8%BA%E5%87%86%E5%88%99\" aria-label=\"行为准则 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>行为准则</h2>\n<p>我们有一份<a href=\"https://github.com/antvis/graphin/blob/develop/CODE_OF_CONDUCT.md\" target=\"_self\" rel=\"nofollow\">行为准则</a>，希望所有的贡献者都能遵守，请花时间阅读一遍全文以确保你能明白哪些是可以做的，哪些是不可以做的。</p>\n<h2 id=\"透明的开发\"><a href=\"#%E9%80%8F%E6%98%8E%E7%9A%84%E5%BC%80%E5%8F%91\" aria-label=\"透明的开发 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>透明的开发</h2>\n<p>我们所有的工作都会放在 GitHub 上。不管是核心团队的成员还是外部贡献者的 pull request 都需要经过同样流程的 review。</p>\n<h2 id=\"分支管理\"><a href=\"#%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\" aria-label=\"分支管理 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分支管理</h2>\n<p>基于我们的 发布周期，我们长期维护两个分支 master 和 feature。如果你要修一个 bug，那么请发 pull request 到 master；如果你要提一个增加新功能的 pull request，那么请基于 feature 分支来做。</p>\n<h2 id=\"bugs\"><a href=\"#bugs\" aria-label=\"bugs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bugs</h2>\n<p>我们使用 GitHub Issues 来做 bug 追踪。 如果你想要你发现的 bug 被快速解决，最好的办法就是通过我们提供的 <a href=\"https://github.com/antvis/graphin/issues/new?assignees=&#x26;labels=&#x26;template=bug_report.md&#x26;title=\" target=\"_self\" rel=\"nofollow\">issue 模板</a> 来提 issue。并且能使用这个 Code Sandbox <a href=\"https://codesandbox.io/s/data-driven-3o71b\" target=\"_self\" rel=\"nofollow\">模板</a> 来提供重现。</p>\n<p>在你报告一个 bug 之前，请先确保已经搜索过已有的 issue 和阅读了我们的 常见问题。</p>\n<h2 id=\"新增功能\"><a href=\"#%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD\" aria-label=\"新增功能 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新增功能</h2>\n<p>如果你有改进我们的 API 或者新增功能的想法，我们同样推荐你使用我们提供的 <a href=\"https://github.com/antvis/graphin/issues/new?assignees=&#x26;labels=&#x26;template=feature_request.md&#x26;title=\" target=\"_self\" rel=\"nofollow\">issue 模板</a> 来新建一个添加新功能的 issue。</p>\n<h2 id=\"第一次贡献\"><a href=\"#%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%B4%A1%E7%8C%AE\" aria-label=\"第一次贡献 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>第一次贡献</h2>\n<p>如果你还不清楚怎么在 GitHub 上提 Pull Request ，可以阅读下面这篇文章来学习：</p>\n<p><a href=\"https://segmentfault.com/a/1190000000736629\" target=\"_self\" rel=\"nofollow\">如何优雅地在 GitHub 上贡献代码</a></p>\n<p>为了能帮助你开始你的第一次尝试，我们用 <a href=\"https://github.com/antvis/graphin/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22\" target=\"_self\" rel=\"nofollow\">good first issues</a> 标记了一些比较比较容易修复的 bug 和小功能。这些 issue 可以很好地做为你的首次尝试。</p>\n<p>如果你打算开始处理一个 issue，请先检查一下 issue 下面的留言以确保没有别人正在处理这个 issue。如果当前没有人在处理的话你可以留言告知其他人你将会处理这个 issue，以免别人重复劳动。</p>\n<p>如果之前有人留言说会处理这个 issue 但是一两个星期都没有动静，那么你也可以接手处理这个 issue，当然还是需要留言告知其他人。</p>\n<h2 id=\"pull-request\"><a href=\"#pull-request\" aria-label=\"pull request permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pull Request</h2>\n<p>Graphin 团队会关注所有的 pull request，我们会 review 以及合并你的代码，也有可能要求你做一些修改或者告诉你我们为什么不能接受这样的修改。</p>\n<p>在你发送 Pull Request 之前，请确认你是按照下面的步骤来做的：</p>\n<p>基于 <a href=\"/zh/docs/manual/Contributing#%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\">正确的分支</a> 做修改。</p>\n<p>在项目根目录下运行了 npm install 和 npm run bootstrap。</p>\n<p>如果你修复了一个 bug 或者新增了一个功能，请确保写了相应的测试，这很重要。</p>\n<p>确认所有的测试都是通过 npm run test 来运行的。</p>\n<p>运行 npm test -- -u 来更新 jest snapshot 并且把这些更新也提交上来（如果有的话）。</p>\n<p>确保你的代码通过了 lint 检查 npm run lint. 小贴士: Lint 会在你 git commit 的时候自动运行（通过 Git Hooks）。</p>\n<p>给 Graphin 发送 pull request：</p>\n<h3 id=\"开发流程\"><a href=\"#%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B\" aria-label=\"开发流程 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开发流程</h3>\n<p>在你 clone 了 Graphin 的代码并且使用 npm install 和 npm run bootstrap 安装完依赖后，你还可以运行下面几个常用的命令：</p>\n<p>npm run start 在本地运行 Graphin 和 Graphin Components 的构建</p>\n<p>npm run studio 在本地运行 Graphin Studio 的网站。</p>\n<p>npm run lint 检查代码风格。</p>\n<p>npm run test 运行测试。</p>\n<p>npm run build 编译 Graphin 和 Graphin Components 代码到 dist 目录。</p>"}}}}}