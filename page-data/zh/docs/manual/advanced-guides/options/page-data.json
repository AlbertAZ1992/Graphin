{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-9-60-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/manual/advanced-guides/options","result":{"data":{"site":{"siteMetadata":{"title":"Graphin","githubUrl":"https://github.com/antvis/graphin","docs":[{"slug":"manual","title":{"zh":"使用文档","en":"docs"},"order":0},{"slug":"manual/main-concepts","title":{"zh":"核心概念","en":"Main Concepts"},"order":3},{"slug":"manual/advanced-guides","title":{"zh":"进阶指导","en":"Advanced Guides"},"order":4},{"slug":"manual/readme","title":{"zh":"文档大纲","en":"readme"},"order":5}]},"pathPrefix":"/graphin"},"markdownRemark":{"html":"<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isZoomOptimize</td>\n<td><code class=\"language-text\">function</code></td>\n<td><code class=\"language-text\">()=&gt;{return true}</code></td>\n<td>缩放的时候是否只展示 KeyShape</td>\n</tr>\n<tr>\n<td>keyShapeZoom</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">0.6</code></td>\n<td>只展示 keyshape 的最小的缩放比率</td>\n</tr>\n<tr>\n<td>done</td>\n<td><code class=\"language-text\">()=&gt;{}</code></td>\n<td><code class=\"language-text\">0.6</code></td>\n<td>只展示 keyshape 的最小的缩放比率</td>\n</tr>\n</tbody>\n</table>","tableOfContents":"","fields":{"slug":"/zh/docs/manual/advanced-guides/options","readingTime":{"text":"1 min read","time":15600.000000000002}},"frontmatter":{"title":"Options 配置"},"parent":{"__typename":"File","relativePath":"manual/advanced-guides/options.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Graphin","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"Graphin 简介","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend 扩展接口","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/graphin"},"frontmatter":{"title":"Graphin 组件","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/lauout"},"frontmatter":{"title":"Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout 自动布局","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register 注册接口","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components 分析组件","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin 实例接口","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events 事件响应","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options 配置","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/apis"},"frontmatter":{"title":"API","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/apis"},"frontmatter":{"title":"API手册","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/components"},"frontmatter":{"title":"分析组件","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/Contributing"},"frontmatter":{"title":"贡献指南","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/contributing"},"frontmatter":{"title":"Contributing","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/change-log"},"frontmatter":{"title":"更新日志","order":8}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout 自动布局","order":1},"html":"<p>在图分析过程中，针对不同的分析场景，我们需要不同的布局方案。</p>\n<h2 id=\"01-布局的定义\"><a href=\"#01-%E5%B8%83%E5%B1%80%E7%9A%84%E5%AE%9A%E4%B9%89\" aria-label=\"01 布局的定义 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 布局的定义</h2>\n<ul>\n<li>布局，顾名思义是如何放置节点，反应在 Graphin 的 <code class=\"language-text\">data.nodes</code> 中就是节点的 x，y 坐标。</li>\n<li>布局算法就是一个函数，用来给节点添加 x，y 坐标。</li>\n</ul>\n<p>布局的指定是通过 Graphin 的 <code class=\"language-text\">props.layout</code> 实现的：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">layout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'force'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h2 id=\"02-内置布局\"><a href=\"#02-%E5%86%85%E7%BD%AE%E5%B8%83%E5%B1%80\" aria-label=\"02 内置布局 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 内置布局</h2>\n<h3 id=\"01-code-classlanguage-textcirclecode\"><a href=\"#01-code-classlanguage-textcirclecode\" aria-label=\"01 code classlanguage textcirclecode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. <code class=\"language-text\">circle</code></h3>\n<ul>\n<li>名称：圆形局</li>\n<li>特点：整体呈现圆形排布。</li>\n<li>适用场景：当我们找到一群点中的关键节点，它所联系的节点最多，那么利用圆形布局，便可以在中心处轻松找到这个关键节点</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasWidth / 2</td>\n<td>圆心 x 坐标</td>\n</tr>\n<tr>\n<td>y</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasHeight / 2</td>\n<td>圆心 y 坐标</td>\n</tr>\n<tr>\n<td>r</td>\n<td><code class=\"language-text\">number</code></td>\n<td>data.nodes.length * 10</td>\n<td>圆的半径</td>\n</tr>\n<tr>\n<td>scale</td>\n<td><code class=\"language-text\">number</code></td>\n<td>0.8</td>\n<td>缩放比率</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"02-code-classlanguage-textconcentriccode\"><a href=\"#02-code-classlanguage-textconcentriccode\" aria-label=\"02 code classlanguage textconcentriccode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. <code class=\"language-text\">concentric</code></h3>\n<ul>\n<li>名称： 同心圆布局</li>\n<li>特点：将节点按照度数排序，节点度数大的一群点会排列在最中心，度数小的节点会分布在最外层。整体呈现同心圆排布</li>\n<li>适用场景：当我们找到一群点中的关键节点，它所联系的节点最多，那么利用圆形布局，便可以在中心处轻松找到这个关键节点</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boundingBox</td>\n<td><code class=\"language-text\">object</code></td>\n<td>{ x:0, y:0, w:CanvasWidth, y:CanvasHeight }</td>\n<td>同心圆的布局范围，默认为当前画布的宽高范围</td>\n</tr>\n<tr>\n<td>minNodeSpacing</td>\n<td><code class=\"language-text\">number</code></td>\n<td>60</td>\n<td>节点间的距离，默认为 60</td>\n</tr>\n<tr>\n<td>levelWidth</td>\n<td><code class=\"language-text\">function</code></td>\n<td>(nodes: Data['nodes'], maxDegree: number) => number</td>\n<td>每层的节点度数范围</td>\n</tr>\n</tbody>\n</table>\n<p>levelWidth 的示例：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> LevelWidthFunction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">:</span> Data<span class=\"token punctuation\">[</span><span class=\"token string\">'nodes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> maxDegree<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** 同心圆层数 */</span>\n    <span class=\"token keyword\">const</span> levelNum <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> maxDegree <span class=\"token operator\">/</span> levelNum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"03-code-classlanguage-textgridcode\"><a href=\"#03-code-classlanguage-textgridcode\" aria-label=\"03 code classlanguage textgridcode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. <code class=\"language-text\">grid</code></h3>\n<ul>\n<li>名称：网格布局</li>\n<li>特点：将节点依次整齐排列，呈现网格状</li>\n<li>适用场景：节点的位置按照用户自定义后的排序展开，清晰明了，一般用于其他布局的前置分析</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasWidth</td>\n<td>布局范围的宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasHeight</td>\n<td>布局范围的高度</td>\n</tr>\n<tr>\n<td>nodeSep</td>\n<td><code class=\"language-text\">number</code></td>\n<td>100</td>\n<td>节点间的间距，上下左右均是一致的</td>\n</tr>\n<tr>\n<td>nodeSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td>50</td>\n<td>节点的大小，单位 px</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"04-code-classlanguage-textradialcode\"><a href=\"#04-code-classlanguage-textradialcode\" aria-label=\"04 code classlanguage textradialcode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04. <code class=\"language-text\">radial</code></h3>\n<ul>\n<li>名称：迳向布局</li>\n<li>特点：节点像雷达一样散开，是静态布局里解决交叉问题的主要布局算法</li>\n<li>适用场景: ??</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>center</td>\n<td><code class=\"language-text\">[number,number]</code></td>\n<td>[CanvasWidth/2,CanvasHeight/2]</td>\n<td>中心点坐标</td>\n</tr>\n<tr>\n<td>preventOverlap</td>\n<td><code class=\"language-text\">bolean</code></td>\n<td>CanvasHeight</td>\n<td>防止覆盖</td>\n</tr>\n<tr>\n<td>nodeSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td>100</td>\n<td>节点大小</td>\n</tr>\n<tr>\n<td>unitRadius</td>\n<td><code class=\"language-text\">number</code></td>\n<td>150</td>\n<td>每层的半径</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"05-code-classlanguage-textdagrecode\"><a href=\"#05-code-classlanguage-textdagrecode\" aria-label=\"05 code classlanguage textdagrecode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05. <code class=\"language-text\">dagre</code></h3>\n<ul>\n<li>名称：有向层次布局</li>\n<li>特点：按照边的方向与节点的层次，呈现树形排列</li>\n<li>适用场景：当我们需要知道一群数据里的层次结构，上下游关系，那么 dagre 有向层次布局便是非常好的办法。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>center</td>\n<td><code class=\"language-text\">[number,number]</code></td>\n<td>[width / 2, height / 2]</td>\n<td>中心点坐标</td>\n</tr>\n<tr>\n<td>nodeSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasHeight</td>\n<td>节点大小</td>\n</tr>\n<tr>\n<td>nodesep</td>\n<td><code class=\"language-text\">number</code></td>\n<td>12</td>\n<td>节点水平间距(px)</td>\n</tr>\n<tr>\n<td>ranksep</td>\n<td><code class=\"language-text\">number</code></td>\n<td>50</td>\n<td>每一层节点之间间距</td>\n</tr>\n<tr>\n<td>align</td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">UL</code></td>\n<td>放置位置</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"06-code-classlanguage-textforcecode\"><a href=\"#06-code-classlanguage-textforcecode\" aria-label=\"06 code classlanguage textforcecode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>06. <code class=\"language-text\">force</code></h3>\n<ul>\n<li>名称： 力导布局</li>\n<li>特点：节点按照自然受力进行分布，节点间模拟电荷斥力保持不相交，边通过弹簧拉力保持不相离，最终在多次动态迭代中，达到一个受力平衡</li>\n<li>适用场景：想解决点边相交问题的时候，使用力导非常合适。一般作为其他布局的后置布局使用</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>preset</td>\n<td><code class=\"language-text\">object</code></td>\n<td>{ name: 'random',options:{}}</td>\n<td>前置布局，主要用于布局切换。当前置布局为 force 时，内部启动 tweak 布局算法</td>\n</tr>\n<tr>\n<td>stiffness</td>\n<td><code class=\"language-text\">number</code></td>\n<td>200</td>\n<td>弹簧劲度系数</td>\n</tr>\n<tr>\n<td>defSpringLen</td>\n<td><code class=\"language-text\">number</code></td>\n<td>200</td>\n<td>默认的弹簧长度</td>\n</tr>\n<tr>\n<td>repulsion</td>\n<td><code class=\"language-text\">number</code></td>\n<td>200.0 * 5</td>\n<td>斥力，这里指代 库伦常量 Ke</td>\n</tr>\n<tr>\n<td>damping</td>\n<td><code class=\"language-text\">number</code></td>\n<td>0.9</td>\n<td>速度的减震因子，其实就是阻尼系数</td>\n</tr>\n<tr>\n<td>minEnergyThreshold</td>\n<td><code class=\"language-text\">number</code></td>\n<td>0.1</td>\n<td>最小能量阈值，粒子运动，有阻尼系数的存在，最终能量会消耗殆尽</td>\n</tr>\n<tr>\n<td>maxSpeed</td>\n<td><code class=\"language-text\">number</code></td>\n<td>1000</td>\n<td>最大的速度 [0,1000]</td>\n</tr>\n<tr>\n<td>MaxIterations</td>\n<td><code class=\"language-text\">number</code></td>\n<td>1000000</td>\n<td>1000000 次/(1000/60) = 60000s = 1min</td>\n</tr>\n<tr>\n<td>animation</td>\n<td><code class=\"language-text\">bolean</code></td>\n<td>true</td>\n<td>是否开启动画</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 力导里的小细节</span>\n\n<span class=\"token operator\">-</span> edge<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>spring 可以指定设置边的弹簧长度\n<span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>force<span class=\"token punctuation\">.</span>mass 可以设置力导节点的质量</code></pre></div>"}},"next":{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin 实例接口","order":2},"html":"<p>在一些特殊情况下，我们需要直接访问 Graphin 实例，来获取一些信息，或者直接对 G6 实例进行操作。这个时候我们可以通过 ref 来获取 Graphin 的实例：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Graphene</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> GraphProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> graphRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>graphRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Graphin</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"01-apis-接口：\"><a href=\"#01-apis-%E6%8E%A5%E5%8F%A3%EF%BC%9A\" aria-label=\"01 apis 接口： permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. APIs 接口：</h2>\n<p>通过 <code class=\"language-text\">graphinRef.current.apis</code> 可以访问到 Graphin 内部的一组 API。这组 API 同样可以在 Graphin 组件中获取到。</p>\n<p>APIs 的具体接口：</p>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>search</td>\n<td>(words: string) => Node[]</td>\n<td>搜索节点，关键词可以为 id，label，或者 property 的值</td>\n</tr>\n<tr>\n<td>highlight</td>\n<td>(nodeIds: string[]) => void</td>\n<td>高亮节点</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>() => void</td>\n<td>重置 Graphin</td>\n</tr>\n<tr>\n<td>getInfo</td>\n<td>{ layouts: { desc:string;icon:string;name:string}[], count: { nodes: number;edges:number; } }</td>\n<td>渲染数据</td>\n</tr>\n<tr>\n<td>history</td>\n<td>{ redo: () => void;undo: () => void;save: () => void;getInfo: () => { currentStep:number;allStep:number;disableRedo:number;disableUndo:number;};}</td>\n<td>操作历史</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"02-g6-graph-实例\"><a href=\"#02-g6-graph-%E5%AE%9E%E4%BE%8B\" aria-label=\"02 g6 graph 实例 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. G6 Graph 实例</h2>\n<p>通过 <code class=\"language-text\">graphinRef.current.graph</code>，可以获取到 Graphin 中实例化的 G6 实例。</p>\n<p>这适用于需要监听 G6 内部事件等等场景。通常来说不推荐使用这种方式来做 hack，因为这跳出了 Graphin 的整个生命周期，可能会和 Graphin 本身产生一些冲突。</p>"}}}}}