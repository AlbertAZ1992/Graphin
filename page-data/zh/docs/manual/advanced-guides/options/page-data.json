{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-9-99-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/manual/advanced-guides/options","result":{"data":{"site":{"siteMetadata":{"title":"Graphin","githubUrl":"https://github.com/antvis/graphin","docs":[{"slug":"manual","title":{"zh":"使用文档","en":"docs"},"order":0},{"slug":"manual/main-concepts","title":{"zh":"核心概念","en":"Main Concepts"},"order":3},{"slug":"manual/advanced-guides","title":{"zh":"进阶指导","en":"Advanced Guides"},"order":4},{"slug":"manual/readme","title":{"zh":"文档大纲","en":"readme"},"order":5}]},"pathPrefix":""},"markdownRemark":{"html":"<p>Graphin 提供了 <code class=\"language-text\">props.options</code> 来对行为和显示进行高级配置。</p>\n<p>具体的 API，详见 <a href=\"/zh/docs/api/graphin#options\">API 文档</a>。</p>\n<p>下面对配置中比较常用的几类进行演示：</p>\n<h3 id=\"配置画布行为和展示细节\"><a href=\"#%E9%85%8D%E7%BD%AE%E7%94%BB%E5%B8%83%E8%A1%8C%E4%B8%BA%E5%92%8C%E5%B1%95%E7%A4%BA%E7%BB%86%E8%8A%82\" aria-label=\"配置画布行为和展示细节 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置画布行为和展示细节</h3>\n<p>Graphin 对画布的缩放，平移和节点拖拽开放了配置：</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-layout-dagre-8j1dl?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"graphin-options-zoom\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>可以修改配置，并对画布和节点进行交互，体验不同配置的不同之处。</p>\n<h3 id=\"配置力导时拖拽\"><a href=\"#%E9%85%8D%E7%BD%AE%E5%8A%9B%E5%AF%BC%E6%97%B6%E6%8B%96%E6%8B%BD\" aria-label=\"配置力导时拖拽 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置力导时拖拽</h3>\n<p>Graphin 对于力导布局时节点的拖拽行为，开放了两个配置：</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-options-zoom-ed84y?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"graphin-options-force\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>可以尝试拖动节点，并这两个配置，体验拖拽后的不同之处。</p>\n<h3 id=\"配置-keyshape-优化\"><a href=\"#%E9%85%8D%E7%BD%AE-keyshape-%E4%BC%98%E5%8C%96\" aria-label=\"配置 keyshape 优化 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置 KeyShape 优化</h3>\n<p>Graphin 对用户缩小图形时，会只显示节点的 KeyShape，而不展示节点内部的细节。这样可以优化缩放的性能。您可以在 options 中对这个行为进行配置：</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-options-zoom-u5k9z?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"graphin-options-zoom\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>可以修改配置，体验不同配置对 KeyShape 优化的影响。</p>","tableOfContents":"<ul>\n<li><a href=\"/zh/docs/manual/advanced-guides/options/#%E9%85%8D%E7%BD%AE%E7%94%BB%E5%B8%83%E8%A1%8C%E4%B8%BA%E5%92%8C%E5%B1%95%E7%A4%BA%E7%BB%86%E8%8A%82\">配置画布行为和展示细节</a></li>\n<li><a href=\"/zh/docs/manual/advanced-guides/options/#%E9%85%8D%E7%BD%AE%E5%8A%9B%E5%AF%BC%E6%97%B6%E6%8B%96%E6%8B%BD\">配置力导时拖拽</a></li>\n<li><a href=\"/zh/docs/manual/advanced-guides/options/#%E9%85%8D%E7%BD%AE-keyshape-%E4%BC%98%E5%8C%96\">配置 KeyShape 优化</a></li>\n</ul>","fields":{"slug":"/zh/docs/manual/advanced-guides/options","readingTime":{"text":"1 min read","time":32700.000000000004}},"frontmatter":{"title":"Options 配置"},"parent":{"__typename":"File","relativePath":"manual/advanced-guides/options.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Graphin","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"Graphin 简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend 扩展接口","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/graphin"},"frontmatter":{"title":"Graphin","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register 注册接口","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout 自动布局","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/graphin"},"frontmatter":{"title":"Graphin 组件","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin 实例接口","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components 分析组件","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options 配置","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events 事件响应","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/components"},"frontmatter":{"title":"Analysis component","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/components"},"frontmatter":{"title":"分析组件","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/icons"},"frontmatter":{"title":"Inner Icons","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/icons"},"frontmatter":{"title":"内置图标","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/Contributing"},"frontmatter":{"title":"贡献指南","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/contributing"},"frontmatter":{"title":"Contributing","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/change-log"},"frontmatter":{"title":"更新日志","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/change-log"},"frontmatter":{"title":"ChangeLog","order":9}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components 分析组件","order":2},"html":"<p>分析过程是一个动态交互的过程，对于图分析也不例外。因此我们需要一些分析组件帮助我们辅助分析，这里 Graphin 内置了两款组件：Toolbar 通用工具栏 和 ContextMenu 右键菜单。</p>\n<blockquote>\n<p>未来计划新增 MiniMap 缩略图 与 ProptertiesFilter 属性筛选器，从而达到让用户高效分析的目的。</p>\n</blockquote>\n<h2 id=\"toolbar\"><a href=\"#toolbar\" aria-label=\"toolbar permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Toolbar</h2>\n<p>Toolbar 是提供分析操作的工具栏。内置了撤销重做（操作历史），画布缩放，全屏，节点聚焦，画布快照下载等等功能。</p>\n<p>使用 Toolbar 很简单：</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-components-context-menu-render-dyzdq?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"graphin-components-toolbar\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>Toolbar 提供了 direction 来控制横向或者纵向显示。我们可以用 render 函数来拓展 Toolbar，就像上面例子中展示的那样。使用 render，我们可以给 Toolbar 添加自定义的功能，比如布局切换等等。</p>\n<p>Toolbar 的完整 API 文档请查看<a href=\"/zh/docs/api/components#toolbar--%E7%BB%84%E4%BB%B6\">这里</a>。</p>\n<h2 id=\"contextmenu\"><a href=\"#contextmenu\" aria-label=\"contextmenu permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ContextMenu</h2>\n<p>ContextMenu 是右键菜单组件。通过 options 可以配置菜单的内容：</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-options-force-tgpkb?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"graphin-components-context-menu\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>我们通常用 ContextMenu 实现节点的复制，删除，反选等等。同时，我们也可以对选择的节点发起新画布分析，或者进行打标，发起关系扩散，数据请求之类的高级自定义行为。这些行为只需要在 MenuItem 的 onClick 回调中实现就可以。</p>\n<p>如果想定制下拉菜单的形态，可以使用 render 这个 props 对菜单进行自定义渲染：</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-components-context-menu-h80od?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"graphin-components-context-menu-render\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>ContextMenu 的完整 API 文档请查看<a href=\"/zh/docs/api/components#contextmenu--%E7%BB%84%E4%BB%B6\">这里</a>。</p>\n<!-- ## Toolbar\n\nToolbar 内置了 4 大功能\n\n#### 功能介绍\n\n\n-   todo/redo\n\n我们提供了撤销重做的功能，能够让整个分析过程变得可靠，因为用户不必再担心因为误操作而毁坏了之前的分析过程。对于工具型产品，这是基础功能，也是特色功能\n\n-   zoomIn/out 缩小放大功能\n\n在分析过程中，当节点数量的变化，布局的变化，引起一些节点可能不在当前视窗内，这个时候我们就需要缩放功能帮助我们调整视窗的范围，配合画布的拖拽，能让我们不丢失全局（zoomOut），也不损失细节（zoomIn）\n\n-   fullscreen 全屏功能\n\n触发后，整个画布占满浏览器窗口，当你的画布页在业务中占比很小的时候，这将非常有用。\n\n-   foucs 节点聚焦功能\n\n输入节点 ID，将自动对焦到该节点，将和 Search 功能配套起来，支持模糊搜索，快速定位，这将大大提高你的分析效率\n\n-   Snapshot 快照下载\n    当你希望保存当前的画布给别人分享，下载快照将会是一个非常有用的功能。 -->\n<!-- ## ContextMenu 右键菜单\n\n#### 功能介绍\n\n在画布上，我们在节点上右键菜单，将会出现更多的操作选项，如果说 Toolbar 是针对整个画布的操作，那么 ContextMenu 则是针对单独的节点做操作，对于单个节点，我们通用的分析操作有如下：\n\n-   复制\n\n复制节点 ID，以便于你的后续操作\n\n-   反选\n\n反选节点，这种排除法，是选择其他节点的一种快捷方式\n\n-   删除\n\n删除该节点，删除后，剩余的节点将重新布局，渲染，这在我们做案件排查的时候，删除已经确定的关键节点，重新布局分析能够减少我们的分析干扰。\n\n-   新增画布分析\n\n当我们在前一次分析中筛选出的关键节点，可以通过右键菜单，新建画布分析的方式，在一个新的画布中做二次分析，减少无用信息的干扰\n\n-   业务相关\n\n业务特有的一些针对节点的操作，比如给该节点打标，进行关系扩散，或者发起数据请求什么的 -->"}},"next":{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0},"html":"<h2 id=\"01-数据的定义\"><a href=\"#01-%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%9A%E4%B9%89\" aria-label=\"01 数据的定义 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 数据的定义</h2>\n<blockquote>\n<p>图的数据结构比较固定。一般用 nodes 表示节点的集合，用 edges 表示边的集合。</p>\n</blockquote>\n<ul>\n<li>\n<ol>\n<li>用 TypeScript 的类型来定义数据 data 如下：</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** 节点 */</span>\n    nodes<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** 边 */</span>\n    edges<span class=\"token punctuation\">:</span> Edge<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<ol start=\"2\">\n<li>Node 最重要的三个概念</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>id 是节点的唯一标识，如果 id 不存在，Graphin 会忽略这个节点</td>\n</tr>\n<tr>\n<td>shape</td>\n<td>shape 是告诉 Graphin，渲染什么样的节点，默认设置为内置的 <code class=\"language-text\">CircleNode</code> 类型 。shape 和 G6 中的 shape 是同一个概念</td>\n</tr>\n<tr>\n<td>data</td>\n<td>data 保存了后端返回的节点数据。单独用 data 字段来存储是为了避免和 Graphin 的节点数据混在一起</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<ol start=\"3\">\n<li>Edge 最重要的三个概念</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>source</td>\n<td>source 是边连接的源节点的 id ，是 string 类型</td>\n</tr>\n<tr>\n<td>target</td>\n<td>target 是边连接的目标节点的 id ，是 string 类型</td>\n</tr>\n<tr>\n<td>data</td>\n<td>data 保存了后端返回的边数据，单独用 data 字段来存储是为了避免和 Graphin 的节点数据混在一起</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>完整的 API，请查看<a href=\"/zh/docs/api/graphin#data\">API 手册</a></p>\n</blockquote>\n<h2 id=\"02-从数据到视图\"><a href=\"#02-%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%88%B0%E8%A7%86%E5%9B%BE\" aria-label=\"02 从数据到视图 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 从数据到视图</h2>\n<p>Graphin 数据全量渲染和增量添加：</p>\n<ul>\n<li>增量数据添加：Graphin 会根据前置布局，动态完成增量数据添加，达到节点扩散，关系发现等效果。</li>\n<li>全量数据渲染：Graphin 支持全量数据渲染，满足保存，导入，导出等需求。</li>\n</ul>\n<p>不管是何种方式，我们在使用 Graphin 的时候，只需要传入要渲染的 data 就可以。</p>\n<p>有时候我们需要根据业务场景，动态调整节点的颜色，大小等。在 Graphin 中，完成这个需求也很简单，只需要自定义一个 <code class=\"language-text\">transform</code> 函数。因为 Graphin 是数据驱动设计，改变数据即可以改变视图。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>对于默认的 <code class=\"language-text\">CircleNode</code> 节点，我们只需要改变每个节点 style 即可：</p>\n<table>\n<thead>\n<tr>\n<th>  属性</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nodeSize</td>\n<td>20</td>\n<td>节点的大小</td>\n</tr>\n<tr>\n<td>primaryColor</td>\n<td>'#9900EF'</td>\n<td>节点的主要颜色</td>\n</tr>\n<tr>\n<td>fontSize</td>\n<td>12</td>\n<td>文本的字体大小</td>\n</tr>\n<tr>\n<td>fontColor</td>\n<td>'#3b3b3b'</td>\n<td>文本的字体颜色</td>\n</tr>\n<tr>\n<td>dark</td>\n<td>'#eee'</td>\n<td>dark 置灰</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>无</td>\n<td>iconfont 的 name</td>\n</tr>\n<tr>\n<td>fontFamily</td>\n<td>'graphin'</td>\n<td>iconfont 的 fontFamily，默认为 Graphin 内置 icon</td>\n</tr>\n</tbody>\n</table>\n<p>Graphin 的内置 icon 请查阅<a href=\"/zh/docs/manual/icons\">内置图标</a></p>\n<blockquote>\n<p>这里的 style 属性规范只针对 Graphin 的内置 Shape。如果是自定义 Shape，从 style 到 G6 节点 attr 的映射可以在 Shape 定义时自行配置</p>\n</blockquote>\n<p>综上，我们可以编写 transform 函数来对 Data 进行转换：</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">trasform</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> nodes<span class=\"token punctuation\">:</span> NodeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> edges<span class=\"token punctuation\">:</span> EdgeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nodes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nodes<span class=\"token punctuation\">:</span> NodeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                id<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                data<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 根据type来指定渲染的shape</span>\n                shape<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">===</span> <span class=\"token string\">'phone'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'MyCustomNode'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'CircleNode'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">// 根据数据的渲染样式</span>\n                style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    nodeSize<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token operator\">?</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">edges</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">edges<span class=\"token punctuation\">:</span> EdgeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> edges<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        nodes<span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">nodes</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        edges<span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">edges</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>transform<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"03-特殊情况\"><a href=\"#03-%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5\" aria-label=\"03 特殊情况 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 特殊情况</h2>\n<p>通过数据的定义，我们知道 Graphin 的 data 是必选项，我们把几种特殊的情况列举在下面：</p>\n<ul>\n<li>如何渲染一个空画布</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>数据 data 和布局 layout 组合起来是如何渲染的？</li>\n</ul>\n<p>渲染包含两个关键点</p>\n<ul>\n<li>\n<ol>\n<li>节点的形状：它由 shape 和 id 共同决定的</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>节点的位置：它由 Node 的 x 和 y 值决定的</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  x、y 坐标</th>\n<th>Layout 布局</th>\n<th>渲染结果</th>\n<th>使用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存在</td>\n<td>不存在</td>\n<td>根据 data.nodes 中的 x，y 进行布局渲染</td>\n<td>图保存再复现</td>\n</tr>\n<tr>\n<td>存在</td>\n<td>存在</td>\n<td>忽略 data.nodes 中的布局信息，根据 layout.name 进行布局渲染</td>\n<td>布局切换</td>\n</tr>\n<tr>\n<td>不存在</td>\n<td>不存在 / 存在</td>\n<td>根据 layout.name 进行布局渲染</td>\n<td>布局渲染</td>\n</tr>\n</tbody>\n</table>"}}}}}