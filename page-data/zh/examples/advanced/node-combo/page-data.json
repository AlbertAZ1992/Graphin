{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-1-0-0-beta-9-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/advanced/node-combo","result":{"data":{"site":{"siteMetadata":{"title":"Graphin","githubUrl":"https://github.com/antvis/graphin","examples":[{"slug":"render","icon":null,"title":{"zh":"数据渲染","en":"render"}},{"slug":"layout","icon":null,"title":{"zh":"内置布局","en":"layout"}},{"slug":"shape","icon":null,"title":{"zh":"节点与边","en":"shape"}},{"slug":"components","icon":null,"title":{"zh":"分析组件","en":"components"}},{"slug":"advanced","icon":null,"title":{"zh":"高级功能","en":"advanced"}},{"slug":"case","icon":null,"title":{"zh":"分析案例","en":"case"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/examples/render/simple"},"frontmatter":{"title":"数据无布局信息","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"render/simple/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/layout/base"},"frontmatter":{"title":"基础布局","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"layout/base/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/components/toolbar"},"frontmatter":{"title":"Toolbar","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"components/toolbar/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/components/toolbar"},"frontmatter":{"title":"Toolbar 工具栏","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"components/toolbar/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/case/identification"},"frontmatter":{"title":"身份识别","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"case/identification/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/case/graph-knowledge"},"frontmatter":{"title":"知识图谱","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"case/graph-knowledge/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/case/anti-fraud"},"frontmatter":{"title":"反欺诈","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"case/anti-fraud/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced/node-expand"},"frontmatter":{"title":"节点扩散","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced/node-expand/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/advanced/node-combo"},"frontmatter":{"title":"Node Combo","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced/node-combo/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced/node-combo"},"frontmatter":{"title":"节点分组","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced/node-combo/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced/layout-switching"},"frontmatter":{"title":"布局切换","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced/layout-switching/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced/find-connections"},"frontmatter":{"title":"关系发现","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced/find-connections/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/node"},"frontmatter":{"title":"内置节点","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"shape/node/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/render/save"},"frontmatter":{"title":"数据有布局信息","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"render/save/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/layout/force"},"frontmatter":{"title":"力导布局","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"layout/force/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/components/legend"},"frontmatter":{"title":"Legend 图例","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"components/legend/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/components/legend"},"frontmatter":{"title":"Legend","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"components/legend/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/components/contextmenu"},"frontmatter":{"title":"ContextMenu","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"components/contextmenu/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/components/contextmenu"},"frontmatter":{"title":"ContextMenu 右键菜单","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"components/contextmenu/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/shape/edge"},"frontmatter":{"title":"多边","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"shape/edge/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/render/expand"},"frontmatter":{"title":"增量数据渲染","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"render/expand/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/layout/sublayout"},"frontmatter":{"title":"子图布局","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"layout/sublayout/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/components/timebar"},"frontmatter":{"title":"Timebar 时间轴","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"components/timebar/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/components/timebar"},"frontmatter":{"title":"Timebar","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"components/timebar/index.en.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"advanced/node-combo/demo/Simple.jsx","absolutePath":"/Users/pomelo/Desktop/github/Graphin/packages/graphin-site/examples/advanced/node-combo/demo/Simple.jsx","order":0,"filename":"Simple.jsx","title":"节点分组","screenshot":"","source":"/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Graphin, { Layout } from '@antv/graphin';\n\nimport '@antv/graphin/dist/index.css'; // 引入Graphin CSS\nimport '@antv/graphin-components/dist/index.css'; // 引入Graphin CSS\n\n/** 构造数据 */\n\nconst source = {\n  id: 'root',\n  children: [\n    {\n      id: 'combo-1',\n      children: [\n        {\n          id: 'node-1',\n        },\n        {\n          id: 'node-2',\n        },\n        {\n          id: 'node-3',\n        },\n        {\n          id: 'node-4',\n        },\n      ],\n    },\n    {\n      id: 'combo-2',\n      children: [\n        {\n          id: 'node-5',\n        },\n        {\n          id: 'node-6',\n        },\n        {\n          id: 'node-7',\n        },\n        {\n          id: 'node-8',\n        },\n        {\n          id: 'node-9',\n        },\n        {\n          id: 'combo-3',\n          children: [\n            {\n              id: 'node-10',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nconst walk = (schema, func) => {\n  if (schema.children && schema.children.length) {\n    schema.children.forEach(child => {\n      func(child, schema.id);\n      walk(child, func);\n    });\n  }\n};\n\n/** 1. 将树形结构转变为Graphin可以识别的数据结构 */\nconst transTree2Graphin = sourceData => {\n  const nodes = [];\n  const combos = [];\n  walk(sourceData, (node, comboId) => {\n    if (node.children) {\n      const combo = { id: node.id, label: node.id, parentId: comboId };\n      if (comboId === 'root') {\n        delete combo.parentId;\n      }\n      combos.push(combo);\n    } else {\n      nodes.push({\n        id: node.id,\n        comboId,\n        label: node.id,\n        data: node,\n        shape: 'CircleNode',\n      });\n    }\n  });\n  return {\n    nodes,\n    combos,\n    edges: [],\n  };\n};\n/** 2.布局 */\n\nconst layout = data => {\n  const { nodes, combos, edges } = data;\n\n  const nodeMap = new Map();\n  nodes.forEach(node => {\n    const NodeMapNodes = nodeMap.get(node.comboId);\n    if (!NodeMapNodes) {\n      nodeMap.set(node.comboId, [node]);\n    } else {\n      nodeMap.set(node.comboId, [...NodeMapNodes, node]);\n    }\n  });\n\n  const [circleNodes, gridNodes, singleNodes] = [...nodeMap.values()];\n\n  const layoutCircleNodes = new Layout.Circle(\n    { nodes: circleNodes },\n    {\n      x: 100,\n      /** 圆心 y坐标 */\n\n      y: 100,\n      /** 半径，默认半径为节点数*10 */\n      r: 100,\n    },\n  );\n  const layoutGridNodes = new Layout.Circle(\n    { nodes: gridNodes },\n    {\n      x: 500,\n      /** 圆心 y坐标 */\n\n      y: 500,\n      /** 半径，默认半径为节点数*10 */\n      r: 100,\n    },\n  );\n\n  const layoutSingleNodes = new Layout.Circle(\n    { nodes: singleNodes },\n    {\n      x: 700,\n      /** 圆心 y坐标 */\n      y: 400,\n      /** 半径，默认半径为节点数*10 */\n      r: 100,\n    },\n  );\n\n  const layoutNodes = [...layoutCircleNodes, ...layoutGridNodes, ...layoutSingleNodes];\n\n  return {\n    nodes: layoutNodes,\n    combos,\n    edges,\n  };\n};\n\nconst graphinData = transTree2Graphin(source);\nconst data = layout(graphinData);\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graphin data={data} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"@antv/graphin\", \"@antv/graphin/dist/index.css\", \"@antv/graphin-components/dist/index.css\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"@antv/graphin\"), require(\"@antv/graphin/dist/index.css\"), require(\"@antv/graphin-components/dist/index.css\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.graphin, global.index, global.index);\n    global.Simple = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _graphin, _index, _index2) {\n  \"use strict\";\n\n  _react = _interopRequireDefault(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _graphin = _interopRequireWildcard(_graphin);\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  // 引入Graphin CSS\n\n  /** 构造数据 */\n  var source = {\n    id: 'root',\n    children: [{\n      id: 'combo-1',\n      children: [{\n        id: 'node-1'\n      }, {\n        id: 'node-2'\n      }, {\n        id: 'node-3'\n      }, {\n        id: 'node-4'\n      }]\n    }, {\n      id: 'combo-2',\n      children: [{\n        id: 'node-5'\n      }, {\n        id: 'node-6'\n      }, {\n        id: 'node-7'\n      }, {\n        id: 'node-8'\n      }, {\n        id: 'node-9'\n      }, {\n        id: 'combo-3',\n        children: [{\n          id: 'node-10'\n        }]\n      }]\n    }]\n  };\n\n  var walk = function walk(schema, func) {\n    if (schema.children && schema.children.length) {\n      schema.children.forEach(function (child) {\n        func(child, schema.id);\n        walk(child, func);\n      });\n    }\n  };\n  /** 1. 将树形结构转变为Graphin可以识别的数据结构 */\n\n\n  var transTree2Graphin = function transTree2Graphin(sourceData) {\n    var nodes = [];\n    var combos = [];\n    walk(sourceData, function (node, comboId) {\n      if (node.children) {\n        var combo = {\n          id: node.id,\n          label: node.id,\n          parentId: comboId\n        };\n\n        if (comboId === 'root') {\n          delete combo.parentId;\n        }\n\n        combos.push(combo);\n      } else {\n        nodes.push({\n          id: node.id,\n          comboId: comboId,\n          label: node.id,\n          data: node,\n          shape: 'CircleNode'\n        });\n      }\n    });\n    return {\n      nodes: nodes,\n      combos: combos,\n      edges: []\n    };\n  };\n  /** 2.布局 */\n\n\n  var layout = function layout(data) {\n    var nodes = data.nodes,\n        combos = data.combos,\n        edges = data.edges;\n    var nodeMap = new Map();\n    nodes.forEach(function (node) {\n      var NodeMapNodes = nodeMap.get(node.comboId);\n\n      if (!NodeMapNodes) {\n        nodeMap.set(node.comboId, [node]);\n      } else {\n        nodeMap.set(node.comboId, [].concat(_toConsumableArray(NodeMapNodes), [node]));\n      }\n    });\n\n    var _ref = _toConsumableArray(nodeMap.values()),\n        circleNodes = _ref[0],\n        gridNodes = _ref[1],\n        singleNodes = _ref[2];\n\n    var layoutCircleNodes = new _graphin.Layout.Circle({\n      nodes: circleNodes\n    }, {\n      x: 100,\n\n      /** 圆心 y坐标 */\n      y: 100,\n\n      /** 半径，默认半径为节点数*10 */\n      r: 100\n    });\n    var layoutGridNodes = new _graphin.Layout.Circle({\n      nodes: gridNodes\n    }, {\n      x: 500,\n\n      /** 圆心 y坐标 */\n      y: 500,\n\n      /** 半径，默认半径为节点数*10 */\n      r: 100\n    });\n    var layoutSingleNodes = new _graphin.Layout.Circle({\n      nodes: singleNodes\n    }, {\n      x: 700,\n\n      /** 圆心 y坐标 */\n      y: 400,\n\n      /** 半径，默认半径为节点数*10 */\n      r: 100\n    });\n    var layoutNodes = [].concat(_toConsumableArray(layoutCircleNodes), _toConsumableArray(layoutGridNodes), _toConsumableArray(layoutSingleNodes));\n    return {\n      nodes: layoutNodes,\n      combos: combos,\n      edges: edges\n    };\n  };\n\n  var graphinData = transTree2Graphin(source);\n  var data = layout(graphinData);\n\n  var App = function App() {\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: \"App\"\n    }, /*#__PURE__*/_react.default.createElement(_graphin.default, {\n      data: data\n    }));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"},{"relativePath":"advanced/node-combo/demo/Force.jsx","absolutePath":"/Users/pomelo/Desktop/github/Graphin/packages/graphin-site/examples/advanced/node-combo/demo/Force.jsx","order":1,"filename":"Force.jsx","title":"力导节点分组","screenshot":"","source":"/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Graphin, { Utils } from '@antv/graphin';\nimport { Toolbar } from '@antv/graphin-components';\nimport { message } from 'antd';\nimport '@antv/graphin/dist/index.css'; // 引入Graphin CSS\nimport '@antv/graphin-components/dist/index.css'; // 引入Graphin CSS\n\nconst App = () => {\n  const data = Utils.mock(15)\n    .tree()\n    .combos(5)\n    .graphin();\n  console.log(data);\n  return (\n    <div className=\"App\">\n      <Graphin\n        data={data}\n        options={{\n          layout: {\n            type: 'comboForce',\n            nodeSpacing: d => 28,\n          },\n        }}\n      ></Graphin>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"@antv/graphin\", \"@antv/graphin-components\", \"antd\", \"@antv/graphin/dist/index.css\", \"@antv/graphin-components/dist/index.css\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"@antv/graphin\"), require(\"@antv/graphin-components\"), require(\"antd\"), require(\"@antv/graphin/dist/index.css\"), require(\"@antv/graphin-components/dist/index.css\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.graphin, global.graphinComponents, global.antd, global.index, global.index);\n    global.Force = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _graphin, _graphinComponents, _antd, _index, _index2) {\n  \"use strict\";\n\n  _react = _interopRequireDefault(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _graphin = _interopRequireWildcard(_graphin);\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  /* eslint-disable no-undef */\n  // 引入Graphin CSS\n  // 引入Graphin CSS\n  var App = function App() {\n    var data = _graphin.Utils.mock(15).tree().combos(5).graphin();\n\n    console.log(data);\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: \"App\"\n    }, /*#__PURE__*/_react.default.createElement(_graphin.default, {\n      data: data,\n      options: {\n        layout: {\n          type: 'comboForce',\n          nodeSpacing: function nodeSpacing(d) {\n            return 28;\n          }\n        }\n      }\n    }));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"}]},"description":"<ul>\n<li>Node Combo</li>\n</ul>"}},"staticQueryHashes":["1015175297","3000541721","3000541721","653731124"]}