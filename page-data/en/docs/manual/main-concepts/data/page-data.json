{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-9-108-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/en/docs/manual/main-concepts/data","result":{"data":{"site":{"siteMetadata":{"title":"Graphin","githubUrl":"https://github.com/antvis/graphin","docs":[{"slug":"manual","title":{"zh":"使用文档","en":"docs"},"order":0},{"slug":"manual/main-concepts","title":{"zh":"核心概念","en":"Main Concepts"},"order":3},{"slug":"manual/advanced-guides","title":{"zh":"进阶指导","en":"Advanced Guides"},"order":4},{"slug":"manual/readme","title":{"zh":"文档大纲","en":"readme"},"order":5}]},"pathPrefix":""},"markdownRemark":{"html":"<h2 id=\"01-definition-of-data\"><a href=\"#01-definition-of-data\" aria-label=\"01 definition of data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Definition of Data</h2>\n<blockquote>\n<p>In graphin, nodes represents the collection of nodes, and edges represents the collection of edges.</p>\n</blockquote>\n<ul>\n<li>\n<ol>\n<li>Use TypeScript to define data:</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Data</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** node */</span>\n    nodes<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** edge */</span>\n    edges<span class=\"token punctuation\">:</span> Edge<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<ol start=\"2\">\n<li>important concepts of Node</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>id is the unique identifier of a node. If id does not exist, Graphin will ignore the node.</td>\n</tr>\n<tr>\n<td>shape</td>\n<td>shape tells Graphin what kind of node to render, and the default shape is the built-in <code class=\"language-text\">CircleNode</code>. the concept of shape is the same with the shape in G6</td>\n</tr>\n<tr>\n<td>data</td>\n<td>Data refers to the specific data of the node</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<ol start=\"3\">\n<li>important concepts of Edge</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Attributr</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>source</td>\n<td>the value of source is the id of the source node</td>\n</tr>\n<tr>\n<td>target</td>\n<td>the value of target is the id of the target node</td>\n</tr>\n<tr>\n<td>data</td>\n<td>data refers to the specific data of the edge</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>For a complete API, please see [API Manual] (../apis/#data)</p>\n</blockquote>\n<h2 id=\"02-from-data-to-view\"><a href=\"#02-from-data-to-view\" aria-label=\"02 from data to view permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. From data to view</h2>\n<p>Graphin Full data rendering and incremental addition:</p>\n<ul>\n<li>Incremental data addition: Graphin adds data dynamically according to the pre-layout to achieve node diffusion, relationship discovery and other effects.</li>\n<li>Full data rendering: Graphin supports full data rendering to Meet the requirements of saving, importing, exporting, etc.</li>\n</ul>\n<p>when we use Graphin, we need to pass in the data to be rendered.</p>\n<p>Sometimes we need to adjust the color, size, etc. of the nodes dynamically according to some business scenes. In Graphin, it is simple to complete, because we just need to customize a transform function. Graphin is design as a data-driven component so data changing can change the view.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>As for the default <code class=\"language-text\">CircleNode</code> node, we only need to change the style of each node.</p>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nodeSize</td>\n<td>20</td>\n<td>size of node</td>\n</tr>\n<tr>\n<td>primaryColor</td>\n<td>'#9900EF'</td>\n<td>primary color of node</td>\n</tr>\n<tr>\n<td>fontSize</td>\n<td>12</td>\n<td>fontSize of text</td>\n</tr>\n<tr>\n<td>fontColor</td>\n<td>'#3b3b3b'</td>\n<td>fontColor of text</td>\n</tr>\n<tr>\n<td>dark</td>\n<td>'#eee'</td>\n<td>color of the node when it is darkened</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Custom transform function</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> transform <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">nodes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nodes<span class=\"token punctuation\">:</span> NodeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                id<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                data<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">,</span>\n                shape<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">===</span> <span class=\"token string\">'phone'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'MyCustomNode'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'CircleNode'</span><span class=\"token punctuation\">,</span>\n                style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    nodeSize<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token operator\">?</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">edges</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">edges<span class=\"token punctuation\">:</span> EdgeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> edges<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> nodes<span class=\"token punctuation\">:</span> NodeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> edges<span class=\"token punctuation\">:</span> EdgeData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            nodes<span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">nodes</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            edges<span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">.</span><span class=\"token function\">edges</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"03-special-cases\"><a href=\"#03-special-cases\" aria-label=\"03 special cases permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. Special cases</h2>\n<p>Through the definition of the data, we know that the data of Graphin is a mandatory option. We have listed several special cases below.</p>\n<ul>\n<li>How to render an empty canvas</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>How is the data and layout combined?</li>\n</ul>\n<p>There are two key points about rendering</p>\n<ul>\n<li>\n<ol>\n<li>The shape of the node: it is determined by the shape and id</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>The position of the node: it is determined by the x and y of the Node</li>\n</ol>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  x、y</th>\n<th>Layout</th>\n<th>How to Render</th>\n<th>scenes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>exist</td>\n<td>not exist</td>\n<td>rendering based on x and y of each node</td>\n<td>render data after saving</td>\n</tr>\n<tr>\n<td>exist</td>\n<td>exist</td>\n<td>ignore x and y of each node and rendering according to layout.name</td>\n<td>switch layout</td>\n</tr>\n<tr>\n<td>not exist</td>\n<td>not exist / exist</td>\n<td>rendering according to layout.name</td>\n<td>render by layout</td>\n</tr>\n</tbody>\n</table>","tableOfContents":"<ul>\n<li><a href=\"/en/docs/manual/main-concepts/data/#01-definition-of-data\">01. Definition of Data</a></li>\n<li><a href=\"/en/docs/manual/main-concepts/data/#02-from-data-to-view\">02. From data to view</a></li>\n<li><a href=\"/en/docs/manual/main-concepts/data/#03-special-cases\">03. Special cases</a></li>\n</ul>","fields":{"slug":"/en/docs/manual/main-concepts/data","readingTime":{"text":"4 min read","time":194700.00000000003}},"frontmatter":{"title":"Data"},"parent":{"relativePath":"manual/main-concepts/data.en.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"Graphin 简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend 扩展接口","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/graphin"},"frontmatter":{"title":"Graphin","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout 自动布局","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register 注册接口","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/graphin"},"frontmatter":{"title":"Graphin 组件","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components 分析组件","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin 实例接口","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events 事件响应","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options 配置","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/components"},"frontmatter":{"title":"Analysis component","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/components"},"frontmatter":{"title":"分析组件","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/icons"},"frontmatter":{"title":"Default Icons","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/icons"},"frontmatter":{"title":"内置图标","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/Contributing"},"frontmatter":{"title":"贡献指南","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/contributing"},"frontmatter":{"title":"Contribution Guide","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/change-log"},"frontmatter":{"title":"ChangeLog","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/change-log"},"frontmatter":{"title":"更新日志","order":9}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components","order":2},"html":"<p>The analysis process is a dynamic interaction process. There is no exception of the graph analysis So we need some analysis components to help us. There are two built-in components in Graphin: Toobar and ContextMenu.</p>\n<blockquote>\n<p>MiniMap and ProptertiesFilter Component are in the planning.</p>\n</blockquote>\n<h2 id=\"01toolbar\"><a href=\"#01toolbar\" aria-label=\"01toolbar permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01.Toolbar</h2>\n<p>Toolbar includes 4 built-in features</p>\n<h4 id=\"features\"><a href=\"#features\" aria-label=\"features permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features</h4>\n<ul>\n<li>todo/redo</li>\n</ul>\n<p>We provide the ability to undo and redo, which makes the entire analysis process reliable, because users no longer have to worry about ruining the previous analysis process because of misuse. For tool-based products, this is the basic function and the feature.</p>\n<ul>\n<li>zoomIn/out </li>\n</ul>\n<p>During the analysis process, when the number of nodes or the layout changes, some nodes may not be in the current window. At this time, we need the zoom function to help us adjust the scope of the window. With the drag and drop of the canvas, we will not lose the global (zoomOut) and detail (zoomIn).</p>\n<ul>\n<li>fullscreen</li>\n</ul>\n<p>After the trigger, the entire canvas fills the browser window, which is very useful when your canvas page is small in the entire screen.</p>\n<ul>\n<li>foucs</li>\n</ul>\n<p>After entering the node ID, the graph will automatically focus on the node. This function can be used with the Search function to support fuzzy search and fast positioning, which will greatly improve your analysis efficiency.</p>\n<ul>\n<li>Snapshot  snapshot download\nDownloading a snapshot will be a very useful feature when you want to save the current canvas for sharing.</li>\n</ul>\n<h2 id=\"02contextmenu\"><a href=\"#02contextmenu\" aria-label=\"02contextmenu permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.ContextMenu</h2>\n<h4 id=\"features-1\"><a href=\"#features-1\" aria-label=\"features 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features</h4>\n<p>On the canvas, we right click on the node and a menu will appear. We can customize the operation options of the ContextMenu. If the Toolbar is for the entire canvas operation, then the ContextMenu will operate on a single node. For a single node, our general analysis operation has as follows:</p>\n<ul>\n<li>Copy</li>\n</ul>\n<p>Copy the node ID for some operations.</p>\n<ul>\n<li>Inverse selection</li>\n</ul>\n<p>Inverse selection is a shortcut to select other nodes.</p>\n<ul>\n<li>Delete</li>\n</ul>\n<p>After tdeleting the node, the remaining nodes will be re-layout and rendered. when we do the case investigation, The re-layout analysis can reduce our analysis interference after deleting the identified key nodes.</p>\n<ul>\n<li>Add canvas</li>\n</ul>\n<p>When we select the key nodes in the previous analysis, we can do a second analysis in a new canvas by right-click menu which will reduce the interference of useless information.</p>\n<ul>\n<li>Business related</li>\n</ul>\n<p>Some operations specific to a node, such as marking the node, spreading the relationship, or initiating a data request.</p>"}},"next":{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout","order":1},"html":"<p>In the process of graph analysis, we need different layouts for different analysis scenes.</p>\n<h2 id=\"01-definition-of-layout\"><a href=\"#01-definition-of-layout\" aria-label=\"01 definition of layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Definition of layout</h2>\n<ul>\n<li>Layout, as the name suggests, is how to place nodes. It is determined by x and y of nodes.</li>\n<li>The layout algorithm is a function that adds x and y to a node.</li>\n</ul>\n<p>The layout is specified by Graphin's <code class=\"language-text\">props.layout</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">layout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'force'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h2 id=\"02-built-in-layout\"><a href=\"#02-built-in-layout\" aria-label=\"02 built in layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. Built-in layout</h2>\n<h3 id=\"01-code-classlanguage-textcirclecode\"><a href=\"#01-code-classlanguage-textcirclecode\" aria-label=\"01 code classlanguage textcirclecode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. <code class=\"language-text\">circle</code></h3>\n<ul>\n<li>name: circle</li>\n<li>character: arranged in a circle order.</li>\n<li>scene: When we find the key node in a group of nodes, it has the most related nodes. so with the circle layout, we can easily find this key node in the center.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasWidth / 2</td>\n<td>x of the center node</td>\n</tr>\n<tr>\n<td>y</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasHeight / 2</td>\n<td>y of the center node</td>\n</tr>\n<tr>\n<td>r</td>\n<td><code class=\"language-text\">number</code></td>\n<td>Number of nodes * 10</td>\n<td>Radius of the circle</td>\n</tr>\n<tr>\n<td>scale</td>\n<td><code class=\"language-text\">number</code></td>\n<td>0.8</td>\n<td>Scaling ratio</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"02-code-classlanguage-textconcentriccode\"><a href=\"#02-code-classlanguage-textconcentriccode\" aria-label=\"02 code classlanguage textconcentriccode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. <code class=\"language-text\">concentric</code></h3>\n<ul>\n<li>name: concentric</li>\n<li>character: The nodes are sorted by degree, and a group of nodes with a large degree are arranged at the center, and nodes with a small degree are distributed at the outermost layer.</li>\n<li>scene: When we find the key node in a group of nodes, it has the most related nodes. so with the circle layout, we can easily find this key node in the center.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boundingBox</td>\n<td><code class=\"language-text\">object</code></td>\n<td>{ x:0, y:0, w:CanvasWidth, h:CanvasHeight }</td>\n<td>Range of the layout</td>\n</tr>\n<tr>\n<td>minNodeSpacing</td>\n<td><code class=\"language-text\">number</code></td>\n<td>60</td>\n<td>Distance between nodes</td>\n</tr>\n<tr>\n<td>levelWidth</td>\n<td><code class=\"language-text\">function</code></td>\n<td>(nodes: Data['nodes'], maxDegree: number) => number</td>\n<td>range of degree in each layer</td>\n</tr>\n</tbody>\n</table>\n<p>example of levelWidth:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> LevelWidthFunction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">:</span> Data<span class=\"token punctuation\">[</span><span class=\"token string\">'nodes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> maxDegree<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** Number of layers */</span>\n    <span class=\"token keyword\">const</span> levelNum <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> maxDegree <span class=\"token operator\">/</span> levelNum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"03-code-classlanguage-textgridcode\"><a href=\"#03-code-classlanguage-textgridcode\" aria-label=\"03 code classlanguage textgridcode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. <code class=\"language-text\">grid</code></h3>\n<ul>\n<li>name: grid</li>\n<li>character: Arrange the nodes in order, presenting a grid</li>\n<li>scene: The position of the node is expanded according to the user-defined sorting. It is generally used for pre-analysis of other layouts.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasWidth</td>\n<td>Width of the layout</td>\n</tr>\n<tr>\n<td>height</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasHeight</td>\n<td>Height of the layout</td>\n</tr>\n<tr>\n<td>nodeSep</td>\n<td><code class=\"language-text\">number</code></td>\n<td>100</td>\n<td>Distance between nodes</td>\n</tr>\n<tr>\n<td>nodeSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td>50</td>\n<td>Size of the node</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"04-code-classlanguage-textradialcode\"><a href=\"#04-code-classlanguage-textradialcode\" aria-label=\"04 code classlanguage textradialcode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04. <code class=\"language-text\">radial</code></h3>\n<ul>\n<li>name: radial</li>\n<li>character: Nodes spread out like radar, which is the main layout algorithm for solving crossover problems in static layouts.</li>\n<li>scene:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>center</td>\n<td><code class=\"language-text\">[number,number]</code></td>\n<td>[CanvasWidth/2,CanvasHeight/2]</td>\n<td>coordinate of the center node</td>\n</tr>\n<tr>\n<td>preventOverlap</td>\n<td><code class=\"language-text\">bolean</code></td>\n<td>CanvasHeight</td>\n<td>prevent coverage</td>\n</tr>\n<tr>\n<td>nodeSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td>100</td>\n<td>size of a node</td>\n</tr>\n<tr>\n<td>unitRadius</td>\n<td><code class=\"language-text\">number</code></td>\n<td>150</td>\n<td>radius of each layer</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"05-code-classlanguage-textdagrecode\"><a href=\"#05-code-classlanguage-textdagrecode\" aria-label=\"05 code classlanguage textdagrecode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05. <code class=\"language-text\">dagre</code></h3>\n<ul>\n<li>name: dagre</li>\n<li>character: Tree arrangement according to the direction of the edge and the level of the node</li>\n<li>scene: When we need to know the hierarchy, the upstream and downstream relationship of the data, dagre is a good way.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>center</td>\n<td><code class=\"language-text\">[number,number]</code></td>\n<td>[width / 2, height / 2]</td>\n<td>coordinate of the center node</td>\n</tr>\n<tr>\n<td>nodeSize</td>\n<td><code class=\"language-text\">number</code></td>\n<td>CanvasHeight</td>\n<td>size of a node</td>\n</tr>\n<tr>\n<td>nodesep</td>\n<td><code class=\"language-text\">number</code></td>\n<td>12</td>\n<td>horizontal distance between nodes</td>\n</tr>\n<tr>\n<td>ranksep</td>\n<td><code class=\"language-text\">number</code></td>\n<td>50</td>\n<td>vertical distance between nodes</td>\n</tr>\n<tr>\n<td>align</td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">UL</code></td>\n<td>position</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"06-code-classlanguage-textforcecode\"><a href=\"#06-code-classlanguage-textforcecode\" aria-label=\"06 code classlanguage textforcecode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>06. <code class=\"language-text\">force</code></h3>\n<ul>\n<li>name: force</li>\n<li>character: The nodes are distributed according to the natural force. The simulated charge repulsion between the nodes remains disjoint, and the spring tension is not dissociated. Finally, a force balance is achieved in multiple dynamic iterations.</li>\n<li>scene: When you want to solve the problem of intersecting nodes, it is very suitable to use the force layout. Generally used as a pre-layout for other layouts</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>  Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>preset</td>\n<td><code class=\"language-text\">object</code></td>\n<td>{ name: 'random',options:{}}</td>\n<td>Front layout that is used for switching layout mainly. tweak layout algorithm will be used when the current layout is force</td>\n</tr>\n<tr>\n<td>stiffness</td>\n<td><code class=\"language-text\">number</code></td>\n<td>200</td>\n<td>Spring stiffness factor</td>\n</tr>\n<tr>\n<td>defSpringLen</td>\n<td><code class=\"language-text\">number</code></td>\n<td>200</td>\n<td>Default spring length</td>\n</tr>\n<tr>\n<td>repulsion</td>\n<td><code class=\"language-text\">number</code></td>\n<td>200.0 * 5</td>\n<td>Repulsive force, here refers to the Coulomb constant Ke</td>\n</tr>\n<tr>\n<td>damping</td>\n<td><code class=\"language-text\">number</code></td>\n<td>0.9</td>\n<td>Damping coefficient</td>\n</tr>\n<tr>\n<td>minEnergyThreshold</td>\n<td><code class=\"language-text\">number</code></td>\n<td>0.1</td>\n<td>Minimum energy threshold</td>\n</tr>\n<tr>\n<td>maxSpeed</td>\n<td><code class=\"language-text\">number</code></td>\n<td>1000</td>\n<td>Maximum speed, range interval [0,1000]</td>\n</tr>\n<tr>\n<td>MaxIterations</td>\n<td><code class=\"language-text\">number</code></td>\n<td>1000000</td>\n<td>1000000 times/(1000/60) = 60000 s = 1 min</td>\n</tr>\n<tr>\n<td>animation</td>\n<td><code class=\"language-text\">bolean</code></td>\n<td>true</td>\n<td>Whether to turn on animation</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// details of the force layout:</span>\n\n<span class=\"token operator\">-</span> edge<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>spring can be used to <span class=\"token keyword\">set</span> the spring length <span class=\"token keyword\">of</span> edge\n<span class=\"token operator\">-</span> node<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>force<span class=\"token punctuation\">.</span>mass can be used to <span class=\"token keyword\">set</span> the quality <span class=\"token keyword\">of</span> the node</code></pre></div>"}}}}}