{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-9-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/en/docs/manual/advanced-guides/register","result":{"data":{"site":{"siteMetadata":{"title":"Graphin","githubUrl":"https://github.com/antvis/graphin","docs":[{"slug":"manual","title":{"zh":"使用文档","en":"docs"},"order":0},{"slug":"manual/main-concepts","title":{"zh":"核心概念","en":"Main Concepts"},"order":3},{"slug":"manual/advanced-guides","title":{"zh":"进阶指导","en":"Advanced Guides"},"order":4},{"slug":"manual/readme","title":{"zh":"文档大纲","en":"readme"},"order":5}]},"pathPrefix":""},"markdownRemark":{"html":"<p>Graphin provides a declarative way to extend the NodeShape. In addition, Graphin also supports direct configuration of G6. Mainly supports custom interactions (behavior), custom edges, custom edges. This gives users the ability to extend the interaction and edge of G6.</p>\n<p>Register is passed to the component via props :</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">register</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">nodeShape</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">edgeShape</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">behavior</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Graphin</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>The specific API of register is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">register<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** register node by using API of G6 */</span>\n    nodeShape<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">:</span> G6Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Register<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** register edge by using API of G6*/</span>\n    edgeShape<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">:</span> G6Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Register<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** register behavior by using API of G6*/</span>\n    behavior<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">:</span> G6Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> BehaviorRegister<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Register</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** name */</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function-variable function\">register</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">:</span> G6Type</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">BehaviorRegister</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Register</span> <span class=\"token punctuation\">{</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n    mode<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you can see, whether it's a custom behavior or a custom edge, it's registered with a function. This function takes a G6 constructor and returns an array. Each array represents a node/edge/behavior to be registered. The behavior is registered with one more option and mode field than the node and edge.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">register<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">nodeShape</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">register</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// see document of G6 registerNode for details</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">edgeShape</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">register</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerEdge</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// see document of G6 registerEdge for details</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">behavior</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">G6</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        mode<span class=\"token punctuation\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// see document of G6 mode for details</span>\n        options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">register</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerBehavior</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// see document of  G6 registerBehavior for details</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>G6 related Docs</strong></p>\n<ul>\n<li><a href=\"https://www.yuque.com/antv/g6/self-node\" target=\"_self\" rel=\"nofollow\">Custom Node</a></li>\n<li><a href=\"https://www.yuque.com/antv/g6/self-edge\" target=\"_self\" rel=\"nofollow\">Custom Side</a></li>\n<li><a href=\"https://www.yuque.com/antv/g6/self-behavior\" target=\"_self\" rel=\"nofollow\">Custom Behavior</a></li>\n</ul>","tableOfContents":"","fields":{"slug":"/en/docs/manual/advanced-guides/register","readingTime":{"text":"2 min read","time":90000}},"frontmatter":{"title":"Register"},"parent":{"relativePath":"manual/advanced-guides/register.en.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"Graphin 简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/data"},"frontmatter":{"title":"Data 数据驱动","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/extend"},"frontmatter":{"title":"Extend 扩展接口","order":0}}},{"node":{"fields":{"slug":"/zh/examples/render/simple"},"frontmatter":{"title":"数据无布局信息","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/kownledge-graph"},"frontmatter":{"title":"知识图谱","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/network-analysis"},"frontmatter":{"title":"网络分析","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/graphin"},"frontmatter":{"title":"Graphin","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/layout"},"frontmatter":{"title":"Layout 自动布局","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/register"},"frontmatter":{"title":"Register 注册接口","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/graphin"},"frontmatter":{"title":"Graphin 组件","order":1}}},{"node":{"fields":{"slug":"/zh/examples/render/save"},"frontmatter":{"title":"数据有布局信息","order":1}}},{"node":{"fields":{"slug":"/zh/examples/layout/grid"},"frontmatter":{"title":"矩阵布局","order":1}}},{"node":{"fields":{"slug":"/zh/examples/layout/force"},"frontmatter":{"title":"力导布局","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components 分析组件","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/components"},"frontmatter":{"title":"Components","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin 实例接口","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/graphRef"},"frontmatter":{"title":"Graphin","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":2}}},{"node":{"fields":{"slug":"/zh/examples/shape/node"},"frontmatter":{"title":"设置节点","order":2}}},{"node":{"fields":{"slug":"/zh/examples/render/expand"},"frontmatter":{"title":"增量数据渲染","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/extend"},"frontmatter":{"title":"Extend","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/register"},"frontmatter":{"title":"Register","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/layout"},"frontmatter":{"title":"Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/main-concepts/events"},"frontmatter":{"title":"Events 事件响应","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced-guides/options"},"frontmatter":{"title":"Options 配置","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/components"},"frontmatter":{"title":"Analysis component","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/components"},"frontmatter":{"title":"分析组件","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ"},"frontmatter":{"title":"FAQ","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/icons"},"frontmatter":{"title":"Default Icons","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/icons"},"frontmatter":{"title":"内置图标","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/Contributing"},"frontmatter":{"title":"贡献指南","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/contributing"},"frontmatter":{"title":"Contribution Guide","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/change-log"},"frontmatter":{"title":"ChangeLog","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/change-log"},"frontmatter":{"title":"更新日志","order":9}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":2},"html":"<h2 id=\"install\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> @antv/graphin --save</code></pre></div>\n<h2 id=\"first-example\"><a href=\"#first-example\" aria-label=\"first example permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>First Example</h2>\n<p>Here is a simple example to show the usage of Graphin. You can use <a href=\"https://codesandbox.io/s/data-driven-fkue0\" target=\"_self\" rel=\"nofollow\">https://codesandbox.io/s/data-driven-fkue0</a> as a starter and fork a new Code Sandbox to play around.</p>\n<iframe\n     src=\"https://codesandbox.io/embed/data-driven-v6v72?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:600px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"data-driven\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<h3 id=\"01-rendering-data\"><a href=\"#01-rendering-data\" aria-label=\"01 rendering data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Rendering data</h3>\n<p>There is no difference between Graphin and typical React component. It has a required props <code class=\"language-text\">data</code> which will be checked internally. There are some requirements for <code class=\"language-text\">props.data</code>. For details, see: <a href=\"/en/docs/manual/main-concepts/data\">Main Concepts/Data</a>.</p>\n<p>Graphin provides a mock function to help us generate some graph data quickly, let us have a try:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Graphin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Utils <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@antv/graphin/dist/index.css\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// import css fro graphin</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./styles.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can preview this in the Code Sanbox link above.</p>\n<h3 id=\"02-using-layout\"><a href=\"#02-using-layout\" aria-label=\"02 using layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. Using layout</h3>\n<p>There are 6 built-in layouts in Grapnin, and the default is concentric (concentric layout). We can switch the default layout according to our needs.</p>\n<p>For example, if we want nodes to be arranged in a force layout:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token deleted-sign deleted\">-  &lt;Graphin data={data} />\n</span><span class=\"token inserted-sign inserted\">+  &lt;Graphin data={data} layout={{name:\"layout\"}}/></span></code></pre></div>\n<p>Preview:</p>\n<iframe\n     src=\"https://codesandbox.io/embed/data-driven-lbk7e?fontsize=14&theme=dark\"\n     style=\"width:100%; height:600px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"quick-starter-layout-change\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<h3 id=\"03-using-components\"><a href=\"#03-using-components\" aria-label=\"03 using components permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. Using components</h3>\n<p>Graphin provides two official components, Toolbar and ContextMenu. You can get more detail about them in the <a href=\"/en/docs/manual/main-concepts/components\">Main-concepts/Components</a>.</p>\n<p>We take Toolbar as an example:</p>\n<ul>\n<li>Install graphin components. Analysis components of graphin are published as package @antv/graphin-components.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> @antv/graphin-components --save</code></pre></div>\n<ul>\n<li>Place Toolbar component inside Graphin component so that Graphin can pass internal properties such as <code class=\"language-text\">graph</code>, <code class=\"language-text\">apis</code>, etc. to the Toolbar:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Graphin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Utils <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Toolbar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@antv/graphin/dist/index.css\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Graphin CSS</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@antv/graphin-components/dist/index.css\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Graphin Component CSS</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./styles.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">layout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'concentric'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Graphin</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Preview:</p>\n<iframe\n     src=\"https://codesandbox.io/embed/graphin-components-toolbar-vged5?fontsize=14&theme=dark\"\n     style=\"width:100%; height:600px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"quick-starter-toolbar\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<p>We can play around these features of graphin component in the <a href=\"/en/GraphinStudio\">Grapin Studio</a>:</p>\n<ul>\n<li>undo/redo</li>\n<li>zoomIn/out</li>\n<li>fullscreen</li>\n<li>contextmenu</li>\n</ul>\n<h3 id=\"04-listening-event\"><a href=\"#04-listening-event\" aria-label=\"04 listening event permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04. Listening event</h3>\n<p>There are a lot of events in graph analysis. If we want to listen events, we should:</p>\n<ul>\n<li>\n<ol>\n<li>Get ref of graphin instance</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Use the G6 instance on graphin instance to listen events</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> graphRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> graph <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> graphRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">layout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'concentric'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>graphRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Graphin</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<!-- review to here -->\n<h3 id=\"05-summary-and-guidance\"><a href=\"#05-summary-and-guidance\" aria-label=\"05 summary and guidance permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05. Summary and guidance</h3>\n<p>Through the above 4 steps, we have a knowledge of all four core concepts of Graphin: data, layout, components, and events.</p>\n<p>As for their usage, there are certainly many students who have doubts. We try to sort out these issues and form a guide. If you have other questions, please ask in the issue.</p>\n<ul>\n<li>\n<p>Data</p>\n<ul>\n<li>\n<ol>\n<li>what is the mock function？ --- <a href=\"main-concepts/data\">Main concepts/data Data</a></li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>How to set the style of Node?</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>How to customize NodeShape?</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>Layout</p>\n<ul>\n<li>\n<ol>\n<li>How to get layout parameters？</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>How to switch Layout?</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>How to implement a custom layout?</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>Components</p>\n<ul>\n<li>\n<ol>\n<li>Can Toolbar/ContextMenu be customized?</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>What components will Graphin add in the future? What are the features?</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>Events</p>\n<ul>\n<li>\n<ol>\n<li>Why not provide a callback function for handleEvents, but let the user manually monitor events via Ref?</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>What events do Graphin support in total?</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>Of course, there are still many problems, which may belong to the high-level guidelines. I will not list them here. Let us enter the second stage and develop some interesting features.</p>\n<h2 id=\"more-features\"><a href=\"#more-features\" aria-label=\"more features permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>more features</h2>\n<p>Through the above, we can know that design of Graphin fully complies with React's programming model and completes the mapping from data to view declaratively. Now let's develop two interesting features together, <strong><em>layout switch</em></strong> and <strong><em>node spread</em></strong>.</p>\n<h3 id=\"01-switching-layout\"><a href=\"#01-switching-layout\" aria-label=\"01 switching layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. Switching layout</h3>\n<blockquote>\n<p>The change of layout will lead to different layout effects to meet people's analytical needs with the same data.</p>\n</blockquote>\n<p>Graphin is a React component, the change of <code class=\"language-text\">props.layout</code> will lead to diffrent layout effect, so we need to combine layouts and change <code class=\"language-text\">props.layout</code> every time.</p>\n<ul>\n<li>\n<ol>\n<li>Interface of <code class=\"language-text\">LayoutSelector</code> component</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Layout</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">LayoutSelectorProps</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** all built-in layouts**/</span>\n    layouts<span class=\"token punctuation\">:</span> Layout<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** current layout **/</span>\n    value<span class=\"token punctuation\">:</span> Layout<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/** events of switching layout **/</span>\n    <span class=\"token function-variable function\">onChange</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vale<span class=\"token punctuation\">:</span> Layout</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LayoutSelector</span></span> <span class=\"token attr-name\">layouts</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>layouts<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currentLayout<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<ol start=\"2\">\n<li>How to get Built-in layout information</li>\n</ol>\n</li>\n</ul>\n<p>Graphin provides a number of APIs to the user which are some internal states or functions. Built-in layout information is also available via <code class=\"language-text\">apis.getInfo().layouts</code>.</p>\n<ul>\n<li>\n<ol start=\"3\">\n<li>How to get API?</li>\n</ol>\n</li>\n</ul>\n<p>Graphin provides two ways to get the apis interface. The first is to pass the component's props, that is, all the components wrapped inside the Graphin component will get the apis property. The second way is through the ref instance, see <a href=\"advanced-guides/graphRef\">Advanced Guide/GraphRef</a>. The first one is suitable for user-defined components, so it is very convenient to get the required interface. The second way is more flexible, and you can use the information provided by Graphin in the outer layer of Graphin, which is often used in complex scenes.</p>\n<ul>\n<li>\n<ol start=\"4\">\n<li>The complete code is as follows:</li>\n</ol>\n</li>\n</ul>\n<iframe\n     src=\"https://codesandbox.io/embed/layout-selector-k16mh?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"layout-selector\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<h3 id=\"02node-diffusion\"><a href=\"#02node-diffusion\" aria-label=\"02node diffusion permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02.Node Diffusion</h3>\n<blockquote>\n<p>Spreading a node out of its one-degree, second-degree, and multi-degree relationship is a very common analytical technique.</p>\n</blockquote>\n<p>Node Diffusion\" is a typical function in graph analysis. Under normal circumstances, node operations in the canvas, such as adding nodes, deleting nodes, we will consider many problems, such as changing from 1 node to 10 nodes, how does the canvas change? Where will the new 9 nodes be placed? When using Graphin, we don't need to think about it. Just remember that it is data-driven. We don't need to care about the internal implementation. Just tell Graphin what data you need to render. Adding nodes does not use <code class=\"language-text\">graph.add(node)</code>, deleting nodes does not need to call <code class=\"language-text\">graph.remove(node)</code>, everything is changed data <code class=\"language-text\">props.data</code>.</p>\n<ul>\n<li>\n<ol>\n<li>Perform a data mock on the selected node.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>The Click event triggers a change to <code class=\"language-text\">state.data</code>.</li>\n</ol>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Graphin<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Utils <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Toolbar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/graphin-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        selected<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> selected <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> graphRef <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> graph <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> graphRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onNodeClick</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n                selected<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'model'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> onNodeClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            graph<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> onNodeClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onExpand</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> expandData <span class=\"token operator\">=</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">expand</span><span class=\"token punctuation\">(</span>startNodes<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">graphin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n            data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">,</span> expandData<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">,</span> expandData<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onExpand<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Node Expand</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Graphin</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">layout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'concentric'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>graphRef<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toolbar</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Graphin</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<ol start=\"4\">\n<li>The complete code is as follows:</li>\n</ol>\n</li>\n</ul>\n<iframe\n     src=\"https://codesandbox.io/embed/icy-snow-grltv?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"nodeExpand\"\n     allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n     sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n   ></iframe>\n<h3 id=\"03-summary-and-guidance\"><a href=\"#03-summary-and-guidance\" aria-label=\"03 summary and guidance permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. Summary and guidance</h3>\n<p>These are the quick start guides for Graphin. I believe you have seen the ease of use of Graphin. In fact, there are a lot of ideas about the use of Graphin. For example, what happens when the layout and data change together? You can have a try. if you want to get a deeper understanding of Graphin, you can continue to read the contents of <a href=\"main-concepts/data\">main-concepts</a> and <a href=\"advanced-guides/extend\">advanced guides</a>.</p>"}}}}}